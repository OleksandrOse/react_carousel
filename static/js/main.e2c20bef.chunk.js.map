{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","this","props","images","step","frameSize","itemWidth","infinite","animationDuration","hiddenImagesSize","length","className","style","width","map","image","index","transition","src","alt","height","type","onClick","setState","Math","min","disabled","max","React","Component","Form","handleChange","toogleInfinite","htmlFor","id","name","value","onChange","checked","App","event","target","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2c20bef.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  transform: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    transform: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n      animationDuration,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    const handlePrevClick = () => {\n      this.setState((state) => ({\n        transform: Math.min(state.transform + itemWidth * step, 0),\n      }));\n\n      if (this.state.transform === 0 && infinite) {\n        this.setState({ transform: -hiddenImagesSize });\n      }\n    };\n\n    const handleNextClick = () => {\n      this.setState((state) => ({\n        transform: Math.max(state.transform - (itemWidth * step),\n          -hiddenImagesSize),\n      }));\n\n      if (this.state.transform === -hiddenImagesSize && infinite) {\n        this.setState({ transform: 0 });\n      }\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${transform}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={handlePrevClick}\n            disabled={transform === 0 && !infinite}\n            data-cy=\"Next\"\n          >\n            &#8249;\n          </button>\n\n          <button\n            data-cy=\"next\"\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={handleNextClick}\n            disabled={\n              transform === -hiddenImagesSize\n              && !infinite\n            }\n          >\n            &#8250;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Form.scss';\n\ntype Props = {\n  itemWidth: number;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  images: string[];\n  infinite: boolean;\n  toogleInfinite: () => void;\n};\n\nexport const Form:React.FC<Props> = ({\n  itemWidth,\n  handleChange,\n  frameSize,\n  step,\n  animationDuration,\n  images,\n  infinite,\n  toogleInfinite,\n}) => (\n  <form className=\"Form\">\n    <label htmlFor=\"itemId\">\n      Item width:\n      <input\n        id=\"itemId\"\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"itemWidth\"\n        value={itemWidth}\n        min=\"100\"\n        max=\"200\"\n        step=\"5\"\n        onChange={handleChange}\n      />\n    </label>\n\n    <label htmlFor=\"frameId\">\n      Frame size:\n      <input\n        id=\"frameId\"\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"frameSize\"\n        value={frameSize}\n        min=\"1\"\n        max={images.length}\n        onChange={handleChange}\n      />\n    </label>\n\n    <label htmlFor=\"stepId\">\n      Step:\n      <input\n        id=\"stepId\"\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"step\"\n        value={step}\n        min=\"1\"\n        max={images.length - frameSize}\n        onChange={handleChange}\n      />\n    </label>\n\n    <label htmlFor=\"animationId\">\n      Animation duration:\n      <input\n        id=\"animationId\"\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"animationDuration\"\n        value={animationDuration}\n        min=\"100\"\n        max=\"5000\"\n        step=\"100\"\n        onChange={handleChange}\n      />\n    </label>\n\n    <label>\n      Infinite:\n      <input\n        className=\"Form__input\"\n        type=\"checkbox\"\n        name=\"infinite\"\n        checked={infinite}\n        onChange={toogleInfinite}\n      />\n    </label>\n  </form>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\nimport { Form } from './components/Form/Form';\n\nexport interface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((state) => ({\n      ...state,\n      [event.target.name]: Number(event.target.value),\n    }));\n  };\n\n  toogleInfinite = () => {\n    this.setState((state) => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          images={images}\n          infinite={infinite}\n          handleChange={this.handleChange}\n          toogleInfinite={this.toogleInfinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}